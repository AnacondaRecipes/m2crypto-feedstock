From 0b9ae0f2912b5d7282958bd281eb73169e23b265 Mon Sep 17 00:00:00 2001
From: Petr Mensik <pemensik@redhat.com>
Date: Wed, 3 Aug 2022 14:29:50 +0200
Subject: [PATCH] Allow EVP tests fail on non-FIPS algorithms

Fail hard only on FIPS algorithms. Allow skipping the test if other
algorithms fail, just report the failure reason.
---
 tests/test_evp.py | 19 ++++++++++++++-----
 1 file changed, 14 insertions(+), 5 deletions(-)

diff --git a/tests/test_evp.py b/tests/test_evp.py
index ceb0030..9ebac1b 100644
--- a/tests/test_evp.py
+++ b/tests/test_evp.py
@@ -137,11 +137,13 @@ class EVPTestCase(unittest.TestCase):
                              209168838103121722341657216703105225176,
                              util.octx_to_num(EVP.hmac(b'key', b'data',
                                               algo='md5')))
-            #self.assertEqual(util.octx_to_num(EVP.hmac(b'key', b'data',
-            #                                  algo='ripemd160')),
-            #                 1176807136224664126629105846386432860355826868536,
-            #                 util.octx_to_num(EVP.hmac(b'key', b'data',
-            #                                  algo='ripemd160')))
+
+        if not fips_mode and m2.OPENSSL_VERSION_NUMBER < 0x30000000:
+            self.assertEqual(util.octx_to_num(EVP.hmac(b'key', b'data',
+                                                algo='ripemd160')),
+                             1176807136224664126629105846386432860355826868536,
+                             util.octx_to_num(EVP.hmac(b'key', b'data',
+                                                algo='ripemd160')))
 
         if m2.OPENSSL_VERSION_NUMBER >= 0x90800F:
             self.assertEqual(util.octx_to_num(EVP.hmac(b'key', b'data',
@@ -405,6 +407,13 @@ class CipherTestCase(unittest.TestCase):
     def test_ciphers(self, ciph):
         self.try_algo(ciph)
 
+    # Allow failures in non-fips ciphers
+    @parameterized.expand(nonfips_ciphers)
+    def test_nonfips_ciphers(self, ciph):
+        try:
+            self.try_algo(ciph)
+        except EVP.EVPError as e:
+            self.skipTest(str(e))
     # # non-compiled (['idea_ecb', 'idea_cbc', 'idea_cfb', 'idea_ofb'])
     # @parameterized.expand([], skip_on_empty=True)
     # def test_ciphers_not_compiled_idea(self, ciph):
-- 
2.35.3

