From a1586296e8654547dc137b269a1c859d39e75e5f Mon Sep 17 00:00:00 2001
From: Chris Burr <christopher.burr@cern.ch>
Date: Thu, 15 Dec 2022 09:36:51 +0100
Subject: [PATCH] Remove OpenSSL 1.0.0 support to avoid windows issues

---
 setup.py | 63 ++++++++------------------------------------------------
 1 file changed, 9 insertions(+), 54 deletions(-)

diff --git a/setup.py b/setup.py
index 444c369..3820c47 100644
--- a/setup.py
+++ b/setup.py
@@ -64,48 +64,6 @@ def _get_additional_includes():
     return err
 
 
-def openssl_version(ossldir, req_ver, required=False):
-    # type: (str, int, bool) -> bool
-    """
-    Compare version of the installed OpenSSL with the maximum required version.
-
-    :param ossldir: the directory where OpenSSL is installed
-    :param req_ver: required version as integer (e.g. 0x10100000)
-    :param required: whether we want bigger-or-equal or less-than
-    :return: Boolean indicating whether the satisfying version of
-             OpenSSL has been installed.
-    """
-    try:
-        import ctypes
-        libssl = ctypes.cdll.LoadLibrary("libssl.so")
-        ver = libssl.OpenSSL_version_num()
-        log.debug("ctypes: ver = %s", hex(ver))
-    # for OpenSSL < 1.1.0
-    except AttributeError:
-        ver = None
-        file = os.path.join(ossldir, 'include', 'openssl', 'opensslv.h')
-
-        with open(file) as origin_file:
-            for line in origin_file:
-                m = re.match(
-                    r'^# *define  *OPENSSL_VERSION_NUMBER  *(0x[0-9a-fA-F]*)',
-                    line)
-                if m:
-                    log.debug('found version number: %s\n', m.group(1))
-                    ver = int(m.group(1), base=16)
-                    break
-
-        log.debug("parsing header file: ver = %s", hex(ver))
-
-        if ver is None:
-            raise OSError('Unknown format of file %s\n' % file)
-
-    if required:
-        return ver >= req_ver
-    else:
-        return ver < req_ver
-
-
 class _M2CryptoBuild(build.build):
     """Enable swig_opts to inherit any include_dirs settings made elsewhere."""
 
@@ -148,17 +106,14 @@ class _M2CryptoBuildExt(build_ext.build_ext):
 
         self.libraries = ['ssl', 'crypto']
         if sys.platform == 'win32':
-            self.libraries = ['ssleay32', 'libeay32']
-            if self.openssl and openssl_version(self.openssl,
-                                                0x10100000, True):
-                self.libraries = ['libssl', 'libcrypto']
-                self.swig_opts.append('-D_WIN32')
-                # Swig doesn't know the version of MSVC, which causes
-                # errors in e_os2.h trying to import stdint.h. Since
-                # python 2.7 is intimately tied to MSVC 2008, it's
-                # harmless for now to define this. Will come back to
-                # this shortly to come up with a better fix.
-                self.swig_opts.append('-D_MSC_VER=1500')
+            self.libraries = ['libssl', 'libcrypto']
+            self.swig_opts.append('-D_WIN32')
+            # Swig doesn't know the version of MSVC, which causes
+            # errors in e_os2.h trying to import stdint.h. Since
+            # python 2.7 is intimately tied to MSVC 2008, it's
+            # harmless for now to define this. Will come back to
+            # this shortly to come up with a better fix.
+            self.swig_opts.append('-D_MSC_VER=1500')
 
         if sys.version_info[:1] >= (3,):
             self.swig_opts.append('-py3')
@@ -250,7 +205,7 @@ class _M2CryptoBuildExt(build_ext.build_ext):
         if not self.bundledlls:
             build_ext.build_ext.run(self)
             return
-
+        raise NotImplementedError()
         if sys.platform == 'win32':
             ver_part = ''
             if self.openssl and openssl_version(self.openssl,
-- 
2.38.1

